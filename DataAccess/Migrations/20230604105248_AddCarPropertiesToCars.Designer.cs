// <auto-generated />
using DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(CarMarketContext))]
    [Migration("20230604105248_AddCarPropertiesToCars")]
    partial class AddCarPropertiesToCars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Concrete.CarProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("CentralLock")
                        .HasColumnType("smallint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("EngineCapacity")
                        .HasColumnType("smallint");

                    b.Property<short>("EnginePower")
                        .HasColumnType("smallint");

                    b.Property<short>("FoldingMirros")
                        .HasColumnType("smallint");

                    b.Property<short>("FuelType")
                        .HasColumnType("smallint");

                    b.Property<short>("Gear")
                        .HasColumnType("smallint");

                    b.Property<short>("HeadlampFog")
                        .HasColumnType("smallint");

                    b.Property<short>("ParkingSensor")
                        .HasColumnType("smallint");

                    b.Property<short>("SunRoof")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CarProperties");
                });

            modelBuilder.Entity("Entities.Concrete.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarPropertiesId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarPropertiesId");

                    b.HasIndex("UsersId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Entities.Concrete.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Concrete.Cars", b =>
                {
                    b.HasOne("Entities.Concrete.CarProperties", "CarProperties")
                        .WithMany("Cars")
                        .HasForeignKey("CarPropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Users", "Users")
                        .WithMany("Cars")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarProperties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entities.Concrete.CarProperties", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Entities.Concrete.Users", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
